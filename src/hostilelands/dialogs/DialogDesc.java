/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hostilelands.dialogs;

import hostilelands.events.GameEvent;
import java.util.HashMap;
import java.util.Map;

/**
 * The description of a dialog, that can be instantiated into a real dialog.
 * Unlike other descriptions, this one is not loaded through XML but
 * generated by various classes.
 *
 * @author Elscouta
 */
public class DialogDesc 
{
    String title;
    String text;
    Map<String, Option> options;
    
    /**
     * Builds a dialog description giving a dialog with a single "Okay." button.
     * 
     * @param title Title of the dialog.
     * @param text Text appearing in the main box.
     * @param after Event to be fired on dialog closing, or null to resume flow.
     */
    public DialogDesc(String title, String text, GameEvent after)
    {
        this.title = title;
        this.text = text;  
        this.options = new HashMap<>();
        
        Option opt = new Option();
        opt.action = after;
        opt.text = "Okay";
        options.put("done", opt);
    }
            
    /**
     * Returns the text displayed in the main content pane of the dialog
     * 
     * @return the text displayed in the main content pane
     */
    public String getText()
    {
        return text;
    }
    
    /**
     * Returns the title of the dialog.
     * 
     * @return the title of the dialog.
     */
    public String getTitle()
    {
        return title;
    }
    
    /**
     * Returns a list of options, as a key -> Option map. These options
     * correspond to the various button allowing to close the window.
     * 
     * @return the list of options.
     */
    public Map<String, Option> getOptions()
    {
        return options;
    }
    
    /**
     * Represents an option that the dialog proposes. These options are
     * mutually exclusive.
     */
    public class Option
    {
        public String text;
        public GameEvent action;
    }
}
